三次握手流程:(查看pricture/web图片)

第一次握手：建立连接时，客户端发送syn包（syn=1）到服务器，生成序列号seq=x，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。
第二次握手：服务器收到syn包，必须确认客户的SYN（ack=x+1），同时自己也发送一个SYN包（syn=1），生成序列号seq=y，即SYN+ACK包，此时服务器进入SYN_RECV状态；
第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=y+1），生成序列号seq=z，此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。

注意:序列号是为了另外一个端接口到该次握手信息而生成的,如果接受到另外一端的信息,则返回ack确认码为(上次请求序列号+1),
然后自己再生成一个序列号,为下次握手提供一个新的序列号值。

为何要三次握手？(握手是确认客户端和服务端连接成功可靠性)
TCP的连接因为是全双工的，也就是Client和Server两端，发送消息两个方向的连接都要建立成功。
如果要保证双向连接都成功的话，三次通信是最少的次数了。
大于三次的话，后面的次数通信就没有必要了，是在浪费资源。



四次挥手流程：
第一次挥手: Client法用一个FIN(fin=1,seq=u)，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态;
第二次挥手: Server收到FIN后，发送一个ACK(seq=v,ack=u+1)给Client,确认序号为收到序号+1，Server进入CLOSE_WAIT状态，Client没有数据回传进入FIN_WAIT_2状态；
第三次挥手: Server发送一个FIN(seq=w,ack=u+1)，用来关闭Server到Client的数据传输，Server进入LAST_ACK状态;
第四次挥手: Client收到FIN后，Client进入TIME_WAIT状态,接着发送一个ACK(seq=u+1,ack=w+1)给Server，确认序号为收到序号+1，Server会进入CLOSED状态，完成四次挥手。


为何要四次挥手？
挥手是为了终止tcp连接，释放tcp连接。
